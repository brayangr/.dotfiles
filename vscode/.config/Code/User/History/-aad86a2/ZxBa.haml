- if !@no_errors && @event.errors.any?
  #error-explanation.alert.alert-danger
    %h4= t('common.forms.show_errors')
    %ul
      - @event.errors.full_messages.each do |msg|
        %li= msg.html_safe
  .visible-xs
    %br
.row
  .col-sm-12
    %strong
      - if @event.id.nil?
        Reserve haciendo click en la fecha y hora deseada en el calendario, la duración se ajustará automáticamente de acuerdo a la disponibilidad.
      -else
        Para cambiar su reserva, arrastre la casilla hasta el recuadro de la hora y fecha deseada, la duración se ajustará automáticamente de acuerdo a la disponibilidad.
  %br
  %br
.row
  .col-sm-8
    #calendar
  .col-sm-4
    = form_for (@event = (@event ? @event : Event.new)), url: @event.id.present? ? common_space_event_path(@common_space, @event) : common_space_events_path(@common_space), html: {class: "form preventive"} do |f|
      = hidden_field_tag '[common_space_id]', @common_space.id
      = hidden_field_tag 'event[start_at]', @event.start_at
      = hidden_field_tag 'event[end_at]', @event.end_at

      .row
        -3.times do
          %br
        - if @event.persisted?
          .col-sm-12
            Acciones:
            =render partial: 'events/actions', locals: {event: @event, to_index: false, tab: nil}
        .col-sm-12
          %h5 Cambiar fecha en el calendario
          #datepicker.input-group.date.input-append
            =text_field_tag :start_at, nil, class: "form-control"
            %span.input-group-addon
              %span.fa.fa-calendar
        .col-sm-12
          %h5 Unidad y #{t('activerecord.models.property_user.one').downcase}
          .input-group.input-append
            - same_user = @event.persisted? && (@event.user_id == @event.reservation_user_id)
            = select_tag 'event[pu_id]', grouped_options_for_select(@property_users, @event.property_user&.id), { class: "form-control #{same_user ? 'disabled' : 'multiselect'}", property_id: '', required: 'required', multiple: false, style:"#{same_user ? '' : 'display: none'}" }
            %span.input-group-addon
              %span.fa.fa-home

        %h5.col-sm-12= "Período del cargo"
        .col-md-8
          = select_tag 'period_of_charge[month]', options_for_select(select_months.map{ |month| [month[:name], month[:id]] } , (@period_of_charge&.period&.month || Time.now.month) ), class: 'form-control'
        .col-md-4
          = select_tag 'period_of_charge[year]', options_for_select(select_years(false, open_period_expense.year).map{ |year| [year[:name], year[:name]] }, (@period_of_charge&.period&.year || Time.now.year)), class: 'form-control'

        - if (current_community.can_admin?(current_user) || current_community.can_manage?(current_user)) and @common_space.admin_confirmation? and @event.id.nil?
          .col-sm-12
            %br
            ="Autorizado"
            =f.check_box :confirmed, {checked: !@common_space.admin_confirmation?}, true, false

        .col-sm-12
          %br
          .pull-left
            %h5 Agregar nota (opcional)
          .pull-right
            %h5#charNum 500
          =f.text_area :note, class: "form-control", placeholder: "Máximo 500 caracteres de nota...", maxlength: 500, rows: 5
          %br

        - administrator_or_manager = (current_community.can_admin?(current_user) || current_community.can_manage?(current_user))
        - property_user = !(@event.confirmed && @common_space.admin_confirmation)
        - if (@event.id.nil? && can?(:create, @event)) || (current_user.admin? || !@event.expired? && (administrator_or_manager || property_user && can?(:update, @event)))
          .col-xs-12
          -if @event.id.nil?
            = f.submit t('views.commons.button.reserve'), id: "reserve-btn", class: 'btn btn-green-cf btn-block disable_after_click permanent'
          - else
            = f.submit t('views.commons.button.save'), class: 'btn btn-green-cf btn-block disable_after_click permanent'
    %br

:javascript

  $(document).ready(function () {
    if ( "#{@common_space.price }" > 0 ) reservationAlert();

    $('.multiselect').multiselect({
      placeholder: "#{t('views.commons.multiselect.select_principal_property')}",
      enableFiltering: true,
      filterBehavior: 'text',
      filterPlaceholder: "#{t('views.commons.multiselect.search_property')}",
      enableCaseInsensitiveFiltering: true,
      buttonWidth: '100%',
      maxHeight: 350,
      templates: {
        button: '<button type="button" class="multiselect dropdown-toggle btn btn-default" data-toggle="dropdown" style="width: 100%; overflow: hidden; text-overflow: ellipsis; text-align: left;"><span class="multiselect-selected-text">"#{t('views.commons.multiselect.all_properties')}"</span> <b class="caret"></b></button>',
        ul: '<ul class="multiselect-container dropdown-menu" style="width: inherit;"></ul>',
        li: '<li><a href="javascript:void(0);"><label style="padding-left: 40px;"></label></a></li>'
      }
    });

    $("#charNum").text(500 - $("#event_note").val().length);
    $("#event_note").keyup(function(e) {
      var length = $("#event_note").val().length;
      $("#charNum").text(500 - length);
    });

    $(document).on('click', '.undo_confirmation', function (e) {
      e.preventDefault();
      var event_id = $(this).data('event_id');
      $('form#edit_event_' + event_id).trigger('submit');
    });

    moment.locale('es');
    var ids_new_events = new Array();
    var calendar_options = {
      defaultView: 'agendaDay',
      minTime: '00:00',
      maxTime: '23:59',
      longPressDelay: 150,
      slotEventOverlap: false,
      slotDuration: '00:30:00',
      height: 550,
      columnFormat: "ddd D/M",
      locale: 'es',
      timezone: '#{current_community.timezone}',
      buttonText: {
        today: 'Hoy',
        week: 'Semana',
        day: 'Día'
      },
      header: {
        right: 'today prev,next agendaWeek,agendaDay'
      },
      allDaySlot: false,
      events: {
        data: {
          from: 'events',
          event_id: "#{!@event.id.nil? ? @event.id : nil }"
        },
        url: "#{ common_space_events_path(@common_space, format: 'json') }",
        type: 'GET',
        error: function () {
          alert('Ha ocurrido un problema obteniendo los eventos!');
        }
      },
      eventDurationEditable: true,
      editable: false,
      selectable: #{@event.id.nil?},
      selectHelper: #{@event.id.nil?},
      unselectAuto: false,
      unselectCancel: '',
      select: function (start, end) {
        $('input#start_at').val(start.format('LL'));
        selectFullSlot(start, end);
      },
      eventResize: function (event, delta, revertFunc) {
        if (!event.editable) {
          revertFunc();
        }
        start = event.start
        end = event.end
        $('input#start_at').val(start.format('LL'));
        selectExistingFullSlot(event, start, end, revertFunc);
      },
      eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
        moveEventToFullSlot(event, delta, revertFunc, jsEvent, ui, view);
      }
    };

    $('#datepicker').datetimepicker({
      format: 'LL'
    });

    $('#calendar').fullCalendar(calendar_options);

    $('#calendar div.fc-view-container').before('<div class="event_time"><h3></h3></div>');

    $('#calendar .fc-today-button, #calendar .fc-prev-button, #calendar .fc-next-button, #calendar .fc-agendaWeek-button, #calendar .fc-agendaDay-button').on('click', function () {
      set_available_slots('#{@common_space.available_slots}');
    });

    $(document).on('dp.change', '#datepicker', function (d) {
      $('#calendar').fullCalendar('gotoDate', d.date.format('Y-MM-DD'));
      set_available_slots('#{@common_space.available_slots}');
    });

    function setStartAtEndAt(data) {
      const startAt = new Date(data.slot_min);
      const endAt = new Date(data.slot_max);
      $('#calendar div.event_time h3')
        .text(
          startAt.toLocaleTimeString('en-US', { timeZone: '#{current_community.timezone}', hour: '2-digit', minute:'2-digit' }) + ' a ' +
          endAt.toLocaleTimeString('en-US', { timeZone: '#{current_community.timezone}', hour: '2-digit', minute:'2-digit' }
        )
      );
      $('input#event_start_at').val(startAt.toISOString());
      $('input#event_end_at').val(endAt.toISOString());
    }

    function selectFullSlot(start, end) {
      var object = {
          datetime_start: start.toISOString(),
          datetime_end: end.toISOString(),
          id: #{@common_space.id}
        },
        url = "#{common_space_get_full_slot_path}";
      $.ajax({
        type: 'get',
        dataType: 'json',
        url: url,
        data: object,
        success: function (data) {
          $('#calendar').fullCalendar('unselect');
          if (data.available) {
            window.num_of_slots = data.num_of_slots;
            var timestamp = new Date().getUTCMilliseconds();
            var clone = ids_new_events.slice(0);
            clone.forEach(function (event_id, i, ar) {
              $("#calendar").fullCalendar('removeEvents', event_id);
              ids_new_events.splice(i, 1);
            });
            $('#calendar').fullCalendar('renderEvent', {
              id: timestamp,
              start: data.slot_min,
              end: data.slot_max,
              editable: true
            });
            ids_new_events.push(timestamp);
            setStartAtEndAt(data);
          } else {
            alert(data.error)
          }
        },
        error: function (response) {
          alert('Ha ocurrido un problema seleccionando su evento!' + response.msg);
        }
      });
    };

    function selectExistingFullSlot(event, start, end, revertFunc) {
      // Metodo que permite hacer el procesamiento de full-slot con un evento presente en el calendario.
      // Duplica parcialmente el codigo, pero lo deja sin cosas raras como eventos fantasma
      event.start = start;
      event.end = end;
      var url = "#{common_space_get_full_slot_path}";
      $.ajax({
        type: 'get',
        url: url,
        dataType: 'json',
        data: {
          datetime_start: event.start.toString(),
          datetime_end: event.end.toString(),
          id: #{@common_space.id}
        },
        success: function(data) {
          if (data.available) {
            window.num_of_slots = data.num_of_slots;
            event.start = data.slot_min;
            event.end = data.slot_max;
            setStartAtEndAt(data);
            $("#calendar").fullCalendar('updateEvent', event);
          }
          else {
            alert(data.error);
            revertFunc();
          }
        },
        error: function(response) {
          alert('Ha ocurrido un problema al actualizar el evento:' + response.msg)
        }
      });
    }

    function moveEventToFullSlot(event, delta, revertFunc, jsEvent, ui, view) {
      var object = {
          datetime_start: (new Date(event.start.valueOf())).toUTCString(),
          datetime_end: (new Date(event.end.valueOf() - 60000)).toUTCString(),
          id: #{@common_space.id}
        },
        url = "#{common_space_get_full_slot_path}";
      $.ajax({
        type: 'get',
        dataType: 'json',
        url: url,
        data: object,
        success: function (data) {
          if (data.available) {
            window.num_of_slots = data.num_of_slots;
            event.start = data.slot_min;
            event.end = data.slot_max;
            $('#calendar').fullCalendar('updateEvent', event);
            setStartAtEndAt(data);
          } else {
            alert(data.error);
            revertFunc();
          }
        },
        error: function (response) {
          alert('Ha ocurrido un problema seleccionando su evento!' + response.msg);
        }
      });
    };
  });

  function set_available_slots(available_slots) {
      var as = JSON.parse(available_slots.replace(/&quot;/g, '"'));
      for (hour = 0; hour <= 23; hour++) {
        var time = hour.toString().length > 1 ? hour + ':00:00' : '0' + hour + ':00:00',
          time_and_a_half = time.substr(0, 2) + ':30:' + time.substr(6, 2);
        $('#calendar').find('tr[data-time="' + time + '"]').find('td.fc-widget-content:not(.fc-axis.fc-time)').remove();
        $('#calendar').find('tr[data-time="' + time_and_a_half + '"]').find('td.fc-widget-content:not(.fc-axis.fc-time)').remove();
      }

      view = $('#calendar').fullCalendar('getView').name;
      data_date = $('#calendar').fullCalendar('getDate').format('YYYY-MM-DD');
      current_day = moment(data_date).day() - 1;
      min_day = view == 'agendaWeek' ? 0 : current_day
      max_day = view == 'agendaWeek' ? 6 : current_day
      for (day = min_day; day <= max_day; day++) {
        aux_day = (day + 1) % 7
        for (hour = 0; hour <= 23; hour++) {
          var time = hour.toString().length > 1 ? hour + ':00:00' : '0' + hour + ':00:00';
          color = as[aux_day][time].bg_color;
          $('#calendar').find('tr[data-time="' + time + '"]').append('<td class="fc-widget-content" style="background-color:' + color + '"></td>');
          var time_and_a_half = time.substr(0, 2) + ':30:' + time.substr(6, 2);
          color = as[aux_day][time_and_a_half].bg_color;
          $('#calendar').find('tr[data-time="' + time_and_a_half + '"]').append('<td class="fc-widget-content" style="background-color:' + color + '"></td>');
        }
      }
    }

-if @event.id.present?
  :javascript
    $(document).ready(function(){
      $('input#start_at').val(moment.utc("#{@event.start_at}").format('LL'));
      $('#calendar').fullCalendar( 'gotoDate', "#{@event.start_at.to_date}" );
      set_available_slots('#{@common_space.available_slots}');
    });

- elsif params[:date].present?
  :javascript
    $(document).ready(function(){
        $('input#start_at').val(moment.utc("#{params[:date]}").format('LL'));
        $('#calendar').fullCalendar( 'gotoDate', "#{params[:date]}" );
        set_available_slots('#{@common_space.available_slots}');
      });

-else
  :javascript
    $(document).ready(function(){
      var params = window.location.search.substring(1).split("&");
      if (params.length > 1){
        var start = parseInt(params[0].split('=')[1]),
            end = parseInt(params[1].split('=')[1]);
        $('input#start_at').val(moment.utc(start).format('LL'));
        $('#calendar').fullCalendar( 'gotoDate', moment.utc(start) );
      }
      else{
        $('input#start_at').val(moment.utc().format('LL'));
        $('#calendar').fullCalendar( 'gotoDate', moment.utc() );
      }
      set_available_slots('#{@common_space.available_slots}');
    });
