= render(ModalComponent.new(id: 'massive-salary-payments-modal')) do |modal|
  = form_with url: create_massive_remuneration_salary_payments_path, method: :post do |f|
    = f.hidden_field :payment_period_expense_id, value: open_period.id

    - modal.with_body do
      .modal-body.massive-salary-payments{ style: 'padding: 0;', data: { controller: 'toggle' } }
        .left-title= t('views.remunerations.massive_salary_payments.modal.title')
        %hr
        .row
          .col-xs-7.massive-salary-payments
            .left-title= t('views.remunerations.massive_salary_payments.modal.employees')
            .left-bold-text= t('views.remunerations.massive_salary_payments.modal.period')
          .col-xs-5
            %p= t('views.remunerations.massive_salary_payments.modal.employees_to_submit', enabled_to_submit: enabled_to_submit, total_employees: total_employees)
            %p{ style: 'margin-bottom: 0;'}
              = t('views.remunerations.massive_salary_payments.modal.payment_period', month: t("date.month_names.#{month}"), year: year)
        %hr
        .left-bold-text= t('views.remunerations.massive_salary_payments.modal.service_billing')
        %input{ type: 'checkbox', data: { action: 'change->toggle#toggleClass' } }
        %label.checkbox-label
          = t('views.remunerations.massive_salary_payments.modal.service_billing_option')
        .field.hidden{ data: { 'toggle-target': 'input', class: 'hidden', 'date-validation-target': 'input' } }
          .left-bold-text= t('views.remunerations.massive_salary_payments.modal.service_billing_period')
          .col-xs-6{ style: 'padding-left: 0;'}
            = render(MonthSelectorComponent.new(id: 'period_month', default_value: open_period.month, events: { data: { 'date-validation-target': 'month', action: 'change->date-validation#checkMinDate', min_month: open_period.month, min_year: open_period.year } }))
          .col-xs-6{ style: 'padding-right: 0;'}
            = render(YearSelectorComponent.new(id: 'period_year', default_value: open_period.year, min_year: open_period.year, events: { data: {'date-validation-target': 'year', action: 'change->date-validation#checkMinDate', min_month: open_period.month, min_year: open_period.year } }))
        %small.warning{ data: { 'date-validation-target': 'warning' } }
          = t('views.remunerations.massive_salary_payments.modal.warning')
    - modal.with_footer do
      .col-lg-6
        %button.btn.btn-default.btn-block.modal-btn{ 'aria-label': 'Close', 'data-dismiss': 'modal', type: 'button' }
          = t('cancel')
      .col-lg-6
        = submit_tag t('views.remunerations.massive_salary_payments.modal.generate'), class: 'btn btn-success-cf btn-block', data: { 'date-validation-target': 'submitButton' }
