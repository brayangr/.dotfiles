= form_for (@advance = (@advance ? @advance : Advance.new)), url: @advance.id.present? ? remuneration_advance_path(@advance) : remuneration_advances_path, method: (@advance.id ? "put" : "post"), html: {class: "form preventive", multipart: true} do |f|
  - if !@no_errors&&@advance.errors.any?
    #error-explanation.alert.alert-danger
      %h4= t('common.forms.show_errors')
      %ul
        - @advance.errors.full_messages.each do |msg|
          %li= msg.html_safe
  .form-container.full-width
    .form-section
      .form-fields
        .form-field
          = f.label(:price)
          = f.text_field :price, {class: "form-control", data: currency_field, autocomplete: "off"}
        .form-field
          = f.label(:comment)
          = f.text_field :comment, class: 'form-control'
        .form-field
          = f.label(:paid_at)
          .input-group.date.datetimepicker.input-append.pull-left
            = f.text_field :paid_at, value: @advance.paid_at.present? ? @advance.paid_at.strftime("%d/%m/%Y") : "" , class: 'form-control date_selector', placeholder: 'Fecha', 'data-format' => "dd/MM/yyyy"
            %span.input-group-addon.add-on
              %i.fa.fa-calendar.cal_selector{ data: { 'time-icon': 'icon-time', 'date-icon': 'icon-calendar' } }

        .form-field
          = f.label(:discount_period)
          .row
            .col-sm-8
              = render(MonthSelectorComponent.new(id: 'month', default_value: @month))
            .col-sm-4
              = render(YearSelectorComponent.new(id: 'year', default_value: @year, min_year: min_year ))

        .form-field
          = f.label(:documentation)

          - unless @advance.new_record? || !@advance.documentation?
            .attach-actions.inline
              = link_to documentation_remuneration_advance_path(@advance) do
                .btn.btn-xs.btn-default
                  %span.fa.fa-download
                  = I18n.t('views.commons.download_file')+' '+@advance.documentation.filename
              %span &nbsp;
              = link_to I18n.t('views.commons.delete_attachment'), destroy_documentation_remuneration_advance_path(@advance), remote: true, class: "btn btn-xs btn-danger toggle_with", id: "remove_file"
            #attach_spinner{hidden:"hidden"}
              .fa.fa-spinner.fa-spin.fa-3x.fa-fw
              = I18n.t('views.commons.deleting_file')
          .fileinput.fileinput-new.input-group{"data-provides" => "fileinput"}
            .form-control{"data-trigger" => "fileinput"}
              %i.glyphicon.glyphicon-file.fileinput-exists
              %span.fileinput-filename
            %span.input-group-addon.btn.btn-default.btn-file.advances-file-button
              %span.fileinput-new= I18n.t('views.commons.button.examine')
              %span.fileinput-exists= I18n.t('views.commons.change')
              %input{:name => "advance[documentation]", :type => "file"}/
            %a.input-group-addon.btn.btn-default.fileinput-exists.advances-file-button{"data-dismiss" => "fileinput", :href => "#"}= I18n.t('views.commons.delete')

        .form-field
          = f.label(:recurrent)
          .checkbox
            %label
              = f.check_box :recurrent, { checked: @advance.id ? @advance.recurrent : false }
              = I18n.t('views.advance.form.recurrent_question')
              %span.fa.fa-question-circle.inline{ title: t('views.advance.form.recurrent_explain'), data: { toggle: 'tooltip' } }

      %hr
      .form-fields
        -if !@service_billing_created
          .form-field
            =f.label(I18n.t('views.advance.form.associated_service_billing'))
            .checkbox
              %label.advances-text
                = check_box_tag :auto_create_service_billing, value = true, checked = @create_service_billing
                = I18n.t('views.advance.form.create_service_billing')

          .form-field{ id: 'payment_period_field', style: "display: #{@create_service_billing ? 'block' : 'none'}" }
            = f.label(:payment_date)
            .row
              .col-sm-8
                = render(MonthSelectorComponent.new(id: 'payment_month', variable_name: 'payment_month', default_value: @month))
              .col-sm-4
                = render(YearSelectorComponent.new(id: 'payment_year', variable_name: 'payment_year', default_value: @year, min_year: min_year))

          .form-field
          .form-field{ id: 'payment_state_field', style: "display: #{@create_service_billing ? 'block' : 'none'}" }
            - mf_enabled = current_community&.automatic_bank_reconciliation_enabled?
            = f.label(I18n.t('views.advance.form.state'))
            = select_tag :payment_state, options_for_select(ServiceBilling.states.map{ |d| [d[1] , d[0]]}, !mf_enabled), class: 'form-control', disabled: mf_enabled
        -else
          .col-xs-12.advances-text
            = t('activerecord.errors.models.service_billing.attributes.id.has_been_created').html_safe


  = hidden_field_tag :employee_id, @employee.id

  .row
    .col-sm-6
      = link_to remuneration_advances_path(employee_id: @employee) do
        .btn.btn-default.btn-block= t('common.cancel')
    .col-sm-6
      = f.submit t('common.save'),  class: 'btn btn-block btn-green-cf disable_after_click permanent', id: (@advance.id? ? '' : "advance_submit"), disabled: true

:javascript
  $(document).ready(function() {
    $('#auto_create_service_billing').change(function() {
      if(this.checked) {
        $('#payment_period_field').show();
        $('#payment_state_field').show();
      }
      else{
        $('#payment_period_field').hide();
        $('#payment_state_field').hide();
      }
    });
  });
